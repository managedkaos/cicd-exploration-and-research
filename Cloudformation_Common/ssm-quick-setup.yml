Metadata:
  Version: '3.1'
Parameters:
  QSType:
    Type: String
    AllowedValues:
      - LA
      - TA
      - MA
    Default: TA
    Description: >-
      (Required) Specifies whether the Quick Setup applies to the local account
      or an AWS organization.
  QSConfigurationId:
    Type: String
    Default: ''
    Description: (Required) Unique identifier of the deployed configuration.
  QSGlobalResourcesRegion:
    Type: String
    Default: ''
    Description: >-
      (Required) Name of the AWS Region to deploy global resources such as S3
      buckets.
  QSPrincipalOrgId:
    Type: String
    Default: ''
    Description: >-
      (Optional) The ID of the principal organization your management account
      operates in.
  UpdateSsmAgent:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: (Optional) Determines whether the SSM agent updates every 2 weeks.
  UpdateEc2LaunchAgent:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Description: (Optional) Determines whether the EC2Launch agent updates monthly.
  CollectInventory:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: (Optional) Determines whether inventory is collected every 30 minutes.
  ScanInstances:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: (Optional) Determines whether instances are scanned for patches daily.
  InstallCloudWatchAgent:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Description: (Optional) Whether the CloudWatch agent should be installed.
  UpdateCloudWatchAgent:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Description: (Optional) Determines whether the CloudWatch agent updates monthly.
  IsPolicyAttachAllowed:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Description: >-
      (Optional) Whether you want to allow Quick Setup to attach IAM policies to
      existing instance profiles.
  ProvidedInstanceProfileName:
    Type: String
    Default: ''
    Description: >-
      (Optional) The name of the instance profile. This parameter is only used
      for the local Quick Setup type.
  ProvidedAssumeRoleArn:
    Type: String
    Default: '*'
    Description: >-
      (Optional) The ARN of the role that allows Automation to perform the
      actions on your behalf. This parameter is only used for the local Quick
      Setup type.
  TargetType:
    Type: String
    Default: '*'
    AllowedValues:
      - Tags
      - InstanceIds
      - '*'
      - ResourceGroups
    Description: >-
      (Optional) Specifies the way instances are targeted. This parameter is
      only used for the local Quick Setup type.
  TargetInstances:
    Type: String
    Default: '*'
    Description: >-
      (Optional) Specifies the target instances. This parameter is only used for
      the local Quick Setup type when InstanceIds are the TargetType.
  TargetTagKey:
    Type: String
    Default: ''
    Description: >-
      (Optional) Specifies the tag key used to target instances. This parameter
      is only used for the local Quick Setup type when Tags are the TargetType.
  TargetTagValue:
    Type: String
    Default: ''
    Description: >-
      (Optional) Specifies the tag value used to target instances. This
      parameter is only used for the local Quick Setup type when Tags are the
      TargetType.
  ResourceGroupName:
    Type: String
    Default: ''
    Description: >-
      (Optional) Specifies the tag value for the resource group used to target
      instances. This parameter is only used for the local Quick Setup type when
      ResourceGroups are the TargetType.
Conditions:
  CreateUpdateSsmAgentAssociation: !Equals 
    - !Ref UpdateSsmAgent
    - 'true'
  CreateUpdateEc2LaunchAgentAssociation: !Equals 
    - !Ref UpdateEc2LaunchAgent
    - 'true'
  CreateCollectInventoryAssociation: !Equals 
    - !Ref CollectInventory
    - 'true'
  CreateScanInstancesAssociation: !Equals 
    - !Ref ScanInstances
    - 'true'
  CreateInstallAndManageCloudWatchAgentAssociation: !Equals 
    - !Ref InstallCloudWatchAgent
    - 'true'
  UpdateCloudWatchAgentAssociation: !Equals 
    - !Ref UpdateCloudWatchAgent
    - 'true'
  ShouldUpdateCloudWatchAgent: !Equals 
    - !Ref UpdateCloudWatchAgent
    - 'true'
  AtLeastOneAssociationCreated: !Or 
    - !Equals 
      - !Ref UpdateSsmAgent
      - 'true'
    - !Equals 
      - !Ref UpdateEc2LaunchAgent
      - 'true'
    - !Equals 
      - !Ref CollectInventory
      - 'true'
    - !Equals 
      - !Ref ScanInstances
      - 'true'
    - !Equals 
      - !Ref InstallCloudWatchAgent
      - 'true'
    - !Equals 
      - !Ref UpdateCloudWatchAgent
      - 'true'
  IsTagValueNotSpecified: !Equals 
    - !Ref TargetTagValue
    - ''
  IsTagKeyAndValueTargeted: !And 
    - !Equals 
      - !Ref QSType
      - LA
    - !Equals 
      - !Ref TargetType
      - Tags
    - !Not 
      - !Condition IsTagValueNotSpecified
  IsTagKeyOnlyTargeted: !And 
    - !Equals 
      - !Ref QSType
      - LA
    - !Equals 
      - !Ref TargetType
      - Tags
    - !Condition IsTagValueNotSpecified
  IsResourceGroupTargeted: !And 
    - !Equals 
      - !Ref QSType
      - LA
    - !Equals 
      - !Ref TargetType
      - ResourceGroups
  IsOrgQuickSetup: !Equals 
    - !Ref QSType
    - TA
  IsNoAutomationAssumeRoleProvided: !Or 
    - !Equals 
      - !Ref QSType
      - TA
    - !Equals 
      - !Ref ProvidedAssumeRoleArn
      - '*'
  IsNoInstanceProfileProvided: !Or 
    - !Equals 
      - !Ref QSType
      - TA
    - !Equals 
      - !Ref ProvidedInstanceProfileName
      - ''
  IsInstanceProfileProvided: !Not 
    - !Condition IsNoInstanceProfileProvided
  TargetAllAutomation: !Equals 
    - !Ref TargetInstances
    - '*'
  TargetAll: !Equals 
    - !Ref TargetInstances
    - '*'
  PolicyAttachAllowed: !Equals 
    - !Ref IsPolicyAttachAllowed
    - 'true'
Resources:
  RoleForAutomation:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ssm.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'iam:ListRoles'
                  - 'config:DescribeConfigurationRecorders'
                  - 'compute-optimizer:GetEnrollmentStatus'
                  - 'support:DescribeTrustedAdvisorChecks'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ssm:UpdateServiceSetting'
                  - 'ssm:GetServiceSetting'
                Resource:
                  - !Join 
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':ssm:*:*:servicesetting/ssm/opsitem/ssm-patchmanager'
                  - !Join 
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':ssm:*:*:servicesetting/ssm/opsitem/EC2'
                  - !Join 
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':ssm:*:*:servicesetting/ssm/opsdata/ExplorerOnboarded'
                  - !Join 
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':ssm:*:*:servicesetting/ssm/opsdata/Association'
                  - !Join 
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':ssm:*:*:servicesetting/ssm/opsdata/ComputeOptimizer'
                  - !Join 
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':ssm:*:*:servicesetting/ssm/opsdata/ConfigCompliance'
                  - !Join 
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - >-
                        :ssm:*:*:servicesetting/ssm/opsdata/OpsData-TrustedAdvisor
                  - !Join 
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':ssm:*:*:servicesetting/ssm/opsdata/SupportCenterCase'
              - Effect: Allow
                Action:
                  - 'iam:CreateServiceLinkedRole'
                Resource: !Join 
                  - ''
                  - - 'arn:'
                    - !Ref 'AWS::Partition'
                    - ':iam::*:role/aws-service-role/ssm.'
                    - !Ref 'AWS::URLSuffix'
                    - /AWSServiceRoleForAmazonSSM
                Condition:
                  StringEquals:
                    'iam:AWSServiceName': ssm.amazonaws.com
          PolicyName: SSMQuickSetupEnableExplorerInlinePolicy
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:GetAutomationExecution'
                  - 'ec2:DescribeIamInstanceProfileAssociations'
                  - 'ec2:DisassociateIamInstanceProfile'
                  - 'ec2:DescribeInstances'
                  - 'ssm:StartAutomationExecution'
                  - 'iam:GetInstanceProfile'
                  - 'iam:ListInstanceProfilesForRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:AttachRolePolicy'
                Resource:
                  - !If 
                    - PolicyAttachAllowed
                    - '*'
                    - !Join 
                      - ''
                      - - 'arn:'
                        - !Ref 'AWS::Partition'
                        - ':iam::'
                        - !Ref 'AWS::AccountId'
                        - ':role/AmazonSSMRoleForInstancesQuickSetup'
                Condition:
                  ArnEquals:
                    'iam:PolicyARN':
                      - !Join 
                        - ''
                        - - 'arn:'
                          - !Ref 'AWS::Partition'
                          - ':iam::aws:policy/AmazonSSMManagedInstanceCore'
                      - !Join 
                        - ''
                        - - 'arn:'
                          - !Ref 'AWS::Partition'
                          - ':iam::aws:policy/AmazonSSMPatchAssociation'
              - Effect: Allow
                Action:
                  - 'iam:AddRoleToInstanceProfile'
                Resource:
                  - !Join 
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':iam::'
                      - !Ref 'AWS::AccountId'
                      - ':instance-profile/AmazonSSMRoleForInstancesQuickSetup'
              - Effect: Allow
                Action:
                  - 'ec2:AssociateIamInstanceProfile'
                Resource: '*'
                Condition:
                  StringEquals:
                    'ec2:NewInstanceProfile': !Join 
                      - ''
                      - - 'arn:'
                        - !Ref 'AWS::Partition'
                        - ':iam::'
                        - !Ref 'AWS::AccountId'
                        - ':instance-profile/AmazonSSMRoleForInstancesQuickSetup'
              - Effect: Allow
                Action:
                  - 'iam:CreateInstanceProfile'
                Resource:
                  - !Join 
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':iam::'
                      - !Ref 'AWS::AccountId'
                      - ':instance-profile/AmazonSSMRoleForInstancesQuickSetup'
              - Effect: Allow
                Action:
                  - 'iam:GetRole'
                Resource:
                  - !Join 
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':iam::'
                      - !Ref 'AWS::AccountId'
                      - ':role/AmazonSSMRoleForInstancesQuickSetup'
                  - !Join 
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':iam::'
                      - !Ref 'AWS::AccountId'
                      - ':role/AWS-QuickSetup-HostMgmtRole-'
                      - !Ref 'AWS::Region'
                      - '-'
                      - !Ref QSConfigurationId
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource:
                  - !Join 
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':iam::'
                      - !Ref 'AWS::AccountId'
                      - ':role/AmazonSSMRoleForInstancesQuickSetup'
                Condition:
                  StringEquals:
                    'iam:PassedToService':
                      - ec2.amazonaws.com
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource:
                  - !Join 
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':iam::'
                      - !Ref 'AWS::AccountId'
                      - ':role/AWS-QuickSetup-HostMgmtRole-'
                      - !Ref 'AWS::Region'
                      - '-'
                      - !Ref QSConfigurationId
                Condition:
                  StringEquals:
                    'iam:PassedToService':
                      - ssm.amazonaws.com
              - Effect: Allow
                Action:
                  - 'iam:CreateRole'
                Resource:
                  - !Join 
                    - ''
                    - - 'arn:'
                      - !Ref 'AWS::Partition'
                      - ':iam::'
                      - !Ref 'AWS::AccountId'
                      - ':role/AmazonSSMRoleForInstancesQuickSetup'
          PolicyName: !Join 
            - ''
            - - AWS-QuickSetup-SSMHostMgmt-CreateAndAttachRoleInlinePolicy-
              - !Ref 'AWS::Region'
              - '-'
              - !Ref QSConfigurationId
      RoleName: !Join 
        - ''
        - - AWS-QuickSetup-HostMgmtRole-
          - !Ref 'AWS::Region'
          - '-'
          - !Ref QSConfigurationId
  CreateAndAttachIAMToInstance:
    Type: 'AWS::SSM::Document'
    Properties:
      UpdateMethod: NewVersion
      Content:
        description: >-
          Composite document for Quick Setup Managing Instances association.
          This document ensures IAM role for instance profile is created in
          account with all required policies
        schemaVersion: '0.3'
        assumeRole: '{{AutomationAssumeRole}}'
        parameters:
          AutomationAssumeRole:
            type: String
          InstanceId:
            type: String
          IsPolicyAttachAllowed:
            type: String
        mainSteps:
          - name: getExistingRoleName
            action: 'aws:executeScript'
            inputs:
              Runtime: python3.6
              Handler: getInstanceProfileName
              InputPayload:
                InstanceId: '{{InstanceId}}'
              Script: |-
                import boto3

                def getInstanceProfileName(events, context):
                    ec2_client = boto3.client("ec2")
                    response = ec2_client.describe_instances(InstanceIds=[events["InstanceId"]])
                    if 'IamInstanceProfile' in response['Reservations'][0]['Instances'][0]:
                        return {'RoleName': response['Reservations'][0]['Instances'][0]['IamInstanceProfile']['Arn'].split('/').pop()}
                    return {'RoleName': 'NoRoleFound'}
            outputs:
              - Name: existingInstanceProfileRoleName
                Selector: $.Payload.RoleName
                Type: String
            nextStep: branchIfProfileExists
          - name: branchIfProfileExists
            action: 'aws:branch'
            inputs:
              Choices:
                - NextStep: createRoleIfNotExists
                  Variable: '{{getExistingRoleName.existingInstanceProfileRoleName}}'
                  StringEquals: NoRoleFound
              Default: checkIfPolicyAttachAllowed
          - name: checkIfPolicyAttachAllowed
            action: 'aws:branch'
            inputs:
              Choices:
                - NextStep: getRoleFromInstanceProfile
                  Variable: '{{IsPolicyAttachAllowed}}'
                  StringEquals: 'true'
              Default: createRoleIfNotExists
          - name: getRoleFromInstanceProfile
            action: 'aws:executeAwsApi'
            inputs:
              Service: iam
              Api: GetInstanceProfile
              InstanceProfileName: '{{getExistingRoleName.existingInstanceProfileRoleName}}'
            outputs:
              - Name: existingRoleName
                Selector: '$.InstanceProfile.Roles[0].RoleName'
                Type: String
            nextStep: attachAmazonSSMManagedInstanceCoreToExistingRole
          - name: attachAmazonSSMManagedInstanceCoreToExistingRole
            action: 'aws:executeAwsApi'
            inputs:
              Service: iam
              Api: AttachRolePolicy
              RoleName: '{{getRoleFromInstanceProfile.existingRoleName}}'
              PolicyArn: 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
            nextStep: attachAmazonSSMPatchAssociationToExistingRole
          - name: attachAmazonSSMPatchAssociationToExistingRole
            action: 'aws:executeAwsApi'
            inputs:
              Service: iam
              Api: AttachRolePolicy
              RoleName: '{{getRoleFromInstanceProfile.existingRoleName}}'
              PolicyArn: 'arn:aws:iam::aws:policy/AmazonSSMPatchAssociation'
            isEnd: true
          - name: createRoleIfNotExists
            action: 'aws:executeAwsApi'
            inputs:
              Service: iam
              Api: CreateRole
              Path: /
              RoleName: AmazonSSMRoleForInstancesQuickSetup
              AssumeRolePolicyDocument: >-
                {"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"},"Action":"sts:AssumeRole"}]}
              Description: EC2 role for SSM for Quick-Setup
            description: >-
              Create AmazonSSMRoleForInstancesQuickSetup Role For SSM Quick
              Setup
            onFailure: Continue
            nextStep: assertRoleForInstanceProfileExists
          - name: assertRoleForInstanceProfileExists
            action: 'aws:assertAwsResourceProperty'
            inputs:
              Service: iam
              Api: GetRole
              PropertySelector: $.Role.RoleName
              DesiredValues:
                - AmazonSSMRoleForInstancesQuickSetup
              RoleName: AmazonSSMRoleForInstancesQuickSetup
            nextStep: attachAmazonSSMManagedInstanceCoreToRole
          - name: attachAmazonSSMManagedInstanceCoreToRole
            action: 'aws:executeAwsApi'
            inputs:
              Service: iam
              Api: AttachRolePolicy
              RoleName: AmazonSSMRoleForInstancesQuickSetup
              PolicyArn: 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
            nextStep: attachAmazonSSMPatchAssociationToRole
          - name: attachAmazonSSMPatchAssociationToRole
            action: 'aws:executeAwsApi'
            inputs:
              Service: iam
              Api: AttachRolePolicy
              RoleName: AmazonSSMRoleForInstancesQuickSetup
              PolicyArn: 'arn:aws:iam::aws:policy/AmazonSSMPatchAssociation'
            nextStep: createInstanceProfileIfNotExists
          - name: createInstanceProfileIfNotExists
            action: 'aws:executeAwsApi'
            inputs:
              InstanceProfileName: AmazonSSMRoleForInstancesQuickSetup
              Service: iam
              Api: CreateInstanceProfile
            onFailure: Continue
            nextStep: addRoleToInstanceProfile
          - name: addRoleToInstanceProfile
            action: 'aws:executeAwsApi'
            inputs:
              InstanceProfileName: AmazonSSMRoleForInstancesQuickSetup
              RoleName: AmazonSSMRoleForInstancesQuickSetup
              Service: iam
              Api: AddRoleToInstanceProfile
            onFailure: Continue
            nextStep: executeAttachIAMToInstance
          - name: executeAttachIAMToInstance
            action: 'aws:executeAutomation'
            maxAttempts: 10
            timeoutSeconds: 60
            inputs:
              DocumentName: AWS-AttachIAMToInstance
              RuntimeParameters:
                RoleName: AmazonSSMRoleForInstancesQuickSetup
                ForceReplace: false
                AutomationAssumeRole: '{{ AutomationAssumeRole }}'
                InstanceId: '{{ InstanceId }}'
            isEnd: true
      DocumentType: Automation
      Name: !Sub 'AWSQuickSetup-CreateAndAttachIAMToInstance-${QSConfigurationId}'
      TargetType: '/AWS::EC2::Instance'
  UpdateExistingInstanceProfile:
    Type: 'AWS::SSM::Document'
    Properties:
      UpdateMethod: NewVersion
      Content:
        description: >-
          Composite document for Quick Setup Managing Instances association.
          This document updates the user provided instance profile with roles
          and policies
        schemaVersion: '0.3'
        assumeRole: '{{AutomationAssumeRole}}'
        parameters:
          AutomationAssumeRole:
            type: String
          InstanceId:
            type: String
          InstanceProfile:
            type: String
        mainSteps:
          - name: getRoleFromInstanceProfile
            action: 'aws:executeAwsApi'
            inputs:
              Service: iam
              Api: GetInstanceProfile
              InstanceProfileName: '{{InstanceProfile}}'
            outputs:
              - Name: existingRoleName
                Selector: '$.InstanceProfile.Roles[0].RoleName'
                Type: String
            nextStep: attachAmazonSSMManagedInstanceCoreToExistingRole
          - name: attachAmazonSSMManagedInstanceCoreToExistingRole
            action: 'aws:executeAwsApi'
            inputs:
              Service: iam
              Api: AttachRolePolicy
              RoleName: '{{getRoleFromInstanceProfile.existingRoleName}}'
              PolicyArn: 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
            nextStep: attachAmazonSSMPatchAssociationToExistingRole
          - name: attachAmazonSSMPatchAssociationToExistingRole
            action: 'aws:executeAwsApi'
            inputs:
              Service: iam
              Api: AttachRolePolicy
              RoleName: '{{getRoleFromInstanceProfile.existingRoleName}}'
              PolicyArn: 'arn:aws:iam::aws:policy/AmazonSSMPatchAssociation'
            isEnd: true
      DocumentType: Automation
      Name: !Sub 'AWSQuickSetup-UpdateExistingInstanceProfile-${QSConfigurationId}'
      TargetType: '/AWS::EC2::Instance'
  SystemAssociationForManagingInstances:
    Type: 'AWS::SSM::Association'
    Properties:
      Name: !Ref CreateAndAttachIAMToInstance
      AssociationName: !Join 
        - ''
        - - AWS-QuickSetup-SSMHostMgmt-AttachIAMToInstance-
          - !Ref QSConfigurationId
      Parameters:
        AutomationAssumeRole:
          - !If 
            - IsNoAutomationAssumeRoleProvided
            - !GetAtt 
              - RoleForAutomation
              - Arn
            - !Ref ProvidedAssumeRoleArn
        IsPolicyAttachAllowed:
          - !Ref IsPolicyAttachAllowed
      AutomationTargetParameterName: InstanceId
      Targets: !If 
        - IsOrgQuickSetup
        - - Key: InstanceIds
            Values:
              - '*'
        - !If 
          - IsTagKeyAndValueTargeted
          - - Key: !Join 
                - ''
                - - 'tag:'
                  - !Ref TargetTagKey
              Values:
                - !Ref TargetTagValue
          - !If 
            - IsTagKeyOnlyTargeted
            - - Key: tag-key
                Values:
                  - !Ref TargetTagKey
            - !If 
              - IsResourceGroupTargeted
              - - Key: ResourceGroup
                  Values:
                    - !Ref ResourceGroupName
              - !If 
                - TargetAll
                - - Key: InstanceIds
                    Values:
                      - '*'
                - - Key: ParameterValues
                    Values: !Split 
                      - ','
                      - !Ref TargetInstances
      ScheduleExpression: rate(30 days)
    Condition: IsNoInstanceProfileProvided
  SystemAssociationForUpdateManagingInstances:
    Type: 'AWS::SSM::Association'
    Properties:
      Name: !Ref UpdateExistingInstanceProfile
      AssociationName: !Join 
        - ''
        - - AWS-QuickSetup-SSMHostMgmt-UpdateIAMForInstanceMgmt-
          - !Ref QSConfigurationId
      Parameters:
        AutomationAssumeRole:
          - !If 
            - IsNoAutomationAssumeRoleProvided
            - !GetAtt 
              - RoleForAutomation
              - Arn
            - !Ref ProvidedAssumeRoleArn
        InstanceProfile:
          - !Ref ProvidedInstanceProfileName
      AutomationTargetParameterName: InstanceId
      Targets: !If 
        - IsOrgQuickSetup
        - - Key: InstanceIds
            Values:
              - '*'
        - !If 
          - IsTagKeyAndValueTargeted
          - - Key: !Join 
                - ''
                - - 'tag:'
                  - !Ref TargetTagKey
              Values:
                - !Ref TargetTagValue
          - !If 
            - IsTagKeyOnlyTargeted
            - - Key: tag-key
                Values:
                  - !Ref TargetTagKey
            - !If 
              - IsResourceGroupTargeted
              - - Key: ResourceGroup
                  Values:
                    - !Ref ResourceGroupName
              - !If 
                - TargetAll
                - - Key: InstanceIds
                    Values:
                      - '*'
                - - Key: ParameterValues
                    Values: !Split 
                      - ','
                      - !Ref TargetInstances
      ScheduleExpression: rate(30 days)
    Condition: IsInstanceProfileProvided
  SystemAssociationForEnablingExplorer:
    Type: 'AWS::SSM::Association'
    Properties:
      Name: AWS-EnableExplorer
      AssociationName: !Join 
        - ''
        - - AWS-QuickSetup-SSMHostMgmt-EnableExplorer-
          - !Ref QSConfigurationId
      Parameters:
        AutomationAssumeRole:
          - !If 
            - IsNoAutomationAssumeRoleProvided
            - !GetAtt 
              - RoleForAutomation
              - Arn
            - !Ref ProvidedAssumeRoleArn
    Condition: AtLeastOneAssociationCreated
  SystemAssociationForSsmAgentUpdate:
    Type: 'AWS::SSM::Association'
    Properties:
      Name: AWS-UpdateSSMAgent
      AssociationName: !Join 
        - ''
        - - AWS-QuickSetup-SSMHostMgmt-UpdateSSMAgent-
          - !Ref QSConfigurationId
      ScheduleExpression: rate(14 days)
      Targets: !If 
        - IsOrgQuickSetup
        - - Key: InstanceIds
            Values:
              - '*'
        - !If 
          - IsTagKeyAndValueTargeted
          - - Key: !Join 
                - ''
                - - 'tag:'
                  - !Ref TargetTagKey
              Values:
                - !Ref TargetTagValue
          - !If 
            - IsTagKeyOnlyTargeted
            - - Key: tag-key
                Values:
                  - !Ref TargetTagKey
            - !If 
              - IsResourceGroupTargeted
              - - Key: 'resource-groups:Name'
                  Values:
                    - !Ref ResourceGroupName
              - !If 
                - TargetAll
                - - Key: InstanceIds
                    Values:
                      - '*'
                - - Key: InstanceIds
                    Values: !Split 
                      - ','
                      - !Ref TargetInstances
    Condition: CreateUpdateSsmAgentAssociation
  SystemAssociationForEc2LaunchAgentUpdate:
    Type: 'AWS::SSM::Association'
    Properties:
      Name: AWSEC2-UpdateLaunchAgent
      AssociationName: !Join 
        - ''
        - - AWS-QuickSetup-SSMHostMgmt-UpdateEC2LaunchAgent-
          - !Ref QSConfigurationId
      ScheduleExpression: rate(30 days)
      Targets: !If 
        - IsOrgQuickSetup
        - - Key: InstanceIds
            Values:
              - '*'
        - !If 
          - IsTagKeyAndValueTargeted
          - - Key: !Join 
                - ''
                - - 'tag:'
                  - !Ref TargetTagKey
              Values:
                - !Ref TargetTagValue
          - !If 
            - IsTagKeyOnlyTargeted
            - - Key: tag-key
                Values:
                  - !Ref TargetTagKey
            - !If 
              - IsResourceGroupTargeted
              - - Key: 'resource-groups:Name'
                  Values:
                    - !Ref ResourceGroupName
              - !If 
                - TargetAll
                - - Key: InstanceIds
                    Values:
                      - '*'
                - - Key: InstanceIds
                    Values: !Split 
                      - ','
                      - !Ref TargetInstances
    Condition: CreateUpdateEc2LaunchAgentAssociation
  SystemAssociationForInventoryCollection:
    Type: 'AWS::SSM::Association'
    Properties:
      Name: AWS-GatherSoftwareInventory
      AssociationName: !Join 
        - ''
        - - AWS-QuickSetup-SSMHostMgmt-CollectInventory-
          - !Ref QSConfigurationId
      Parameters:
        applications:
          - Enabled
        awsComponents:
          - Enabled
        networkConfig:
          - Enabled
        instanceDetailedInformation:
          - Enabled
        windowsUpdates:
          - Enabled
        services:
          - Enabled
        windowsRoles:
          - Enabled
        customInventory:
          - Enabled
      ScheduleExpression: rate(30 minutes)
      Targets: !If 
        - IsOrgQuickSetup
        - - Key: InstanceIds
            Values:
              - '*'
        - !If 
          - IsTagKeyAndValueTargeted
          - - Key: !Join 
                - ''
                - - 'tag:'
                  - !Ref TargetTagKey
              Values:
                - !Ref TargetTagValue
          - !If 
            - IsTagKeyOnlyTargeted
            - - Key: tag-key
                Values:
                  - !Ref TargetTagKey
            - !If 
              - IsResourceGroupTargeted
              - - Key: 'resource-groups:Name'
                  Values:
                    - !Ref ResourceGroupName
              - !If 
                - TargetAll
                - - Key: InstanceIds
                    Values:
                      - '*'
                - - Key: InstanceIds
                    Values: !Split 
                      - ','
                      - !Ref TargetInstances
    Condition: CreateCollectInventoryAssociation
  SystemAssociationForScanningPatches:
    Type: 'AWS::SSM::Association'
    Properties:
      Name: AWS-RunPatchBaselineAssociation
      AssociationName: !Join 
        - ''
        - - AWS-QuickSetup-SSMHostMgmt-ScanForPatches-
          - !Ref QSConfigurationId
      Parameters:
        Operation:
          - Scan
      ScheduleExpression: rate(1 day)
      SyncCompliance: MANUAL
      Targets: !If 
        - IsOrgQuickSetup
        - - Key: InstanceIds
            Values:
              - '*'
        - !If 
          - IsTagKeyAndValueTargeted
          - - Key: !Join 
                - ''
                - - 'tag:'
                  - !Ref TargetTagKey
              Values:
                - !Ref TargetTagValue
          - !If 
            - IsTagKeyOnlyTargeted
            - - Key: tag-key
                Values:
                  - !Ref TargetTagKey
            - !If 
              - IsResourceGroupTargeted
              - - Key: 'resource-groups:Name'
                  Values:
                    - !Ref ResourceGroupName
              - !If 
                - TargetAll
                - - Key: InstanceIds
                    Values:
                      - '*'
                - - Key: InstanceIds
                    Values: !Split 
                      - ','
                      - !Ref TargetInstances
    Condition: CreateScanInstancesAssociation
  InstallAndManageCloudWatchDocument:
    Type: 'AWS::SSM::Document'
    Properties:
      UpdateMethod: NewVersion
      Content:
        schemaVersion: '2.2'
        description: >-
          The AWS-InstallAndManageCloudWatch command document installs the
          Amazon CloudWatch agent and manages the configuration of the agent for
          Amazon EC2 instances.
        mainSteps:
          - action: 'aws:runDocument'
            name: installCWAgent
            inputs:
              documentType: SSMDocument
              documentPath: AWS-ConfigureAWSPackage
              documentParameters:
                action: Install
                name: AmazonCloudWatchAgent
          - action: 'aws:runDocument'
            name: manageCWAgent
            inputs:
              documentType: SSMDocument
              documentPath: AmazonCloudWatch-ManageAgent
              documentParameters:
                action: configure
                mode: ec2
                optionalConfigurationSource: default
                optionalRestart: 'yes'
      DocumentType: Command
      Name: !Join 
        - ''
        - - AWSQuickSetup-InstallAndManageCloudWatchDocument-
          - !Ref QSConfigurationId
    Condition: CreateInstallAndManageCloudWatchAgentAssociation
  SystemAssociationForInstallAndConfigureCloudWatchAgent:
    Type: 'AWS::SSM::Association'
    Properties:
      Name: !Ref InstallAndManageCloudWatchDocument
      AssociationName: !Join 
        - ''
        - - AWS-QuickSetup-SSMHostMgmt-ManageCloudWatchAgent-
          - !Ref QSConfigurationId
      ScheduleExpression: !Ref 'AWS::NoValue'
      Targets: !If 
        - IsOrgQuickSetup
        - - Key: InstanceIds
            Values:
              - '*'
        - !If 
          - IsTagKeyAndValueTargeted
          - - Key: !Join 
                - ''
                - - 'tag:'
                  - !Ref TargetTagKey
              Values:
                - !Ref TargetTagValue
          - !If 
            - IsTagKeyOnlyTargeted
            - - Key: tag-key
                Values:
                  - !Ref TargetTagKey
            - !If 
              - IsResourceGroupTargeted
              - - Key: 'resource-groups:Name'
                  Values:
                    - !Ref ResourceGroupName
              - !If 
                - TargetAll
                - - Key: InstanceIds
                    Values:
                      - '*'
                - - Key: InstanceIds
                    Values: !Split 
                      - ','
                      - !Ref TargetInstances
    Condition: CreateInstallAndManageCloudWatchAgentAssociation
  UpdateCloudWatchDocument:
    Type: 'AWS::SSM::Document'
    Properties:
      UpdateMethod: NewVersion
      Content:
        schemaVersion: '2.2'
        description: A composite document for updating CloudWatch agent.
        mainSteps:
          - precondition:
              StringEquals:
                - platformType
                - Linux
            action: 'aws:runShellScript'
            name: first
            inputs:
              runCommand:
                - sleep 1800
          - precondition:
              StringEquals:
                - platformType
                - Windows
            action: 'aws:runPowerShellScript'
            name: second
            inputs:
              runCommand:
                - Start-Sleep -Seconds 1800
          - action: 'aws:runDocument'
            name: installCWAgent
            inputs:
              documentType: SSMDocument
              documentPath: AWS-ConfigureAWSPackage
              documentParameters: '{"action":"Install","name" : "AmazonCloudWatchAgent"}'
      DocumentType: Command
      Name: !Join 
        - ''
        - - UpdateCloudWatchDocument-
          - !Ref QSConfigurationId
    Condition: UpdateCloudWatchAgentAssociation
  SystemAssociationForUpdateCloudWatchAgent:
    Type: 'AWS::SSM::Association'
    Properties:
      Name: !Ref UpdateCloudWatchDocument
      AssociationName: !Join 
        - ''
        - - AWS-QuickSetup-SSMHostMgmt-UpdateCloudWatchAgent-
          - !Ref QSConfigurationId
      ScheduleExpression: rate(30 days)
      Targets: !If 
        - IsOrgQuickSetup
        - - Key: InstanceIds
            Values:
              - '*'
        - !If 
          - IsTagKeyAndValueTargeted
          - - Key: !Join 
                - ''
                - - 'tag:'
                  - !Ref TargetTagKey
              Values:
                - !Ref TargetTagValue
          - !If 
            - IsTagKeyOnlyTargeted
            - - Key: tag-key
                Values:
                  - !Ref TargetTagKey
            - !If 
              - IsResourceGroupTargeted
              - - Key: 'resource-groups:Name'
                  Values:
                    - !Ref ResourceGroupName
              - !If 
                - TargetAll
                - - Key: InstanceIds
                    Values:
                      - '*'
                - - Key: InstanceIds
                    Values: !Split 
                      - ','
                      - !Ref TargetInstances
    Condition: UpdateCloudWatchAgentAssociation
